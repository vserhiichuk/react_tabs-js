{"version":3,"sources":["utils/helpers.js","components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["findCurrentElementById","tabs","selectedId","find","tab","id","Tabs","selectedTabId","onTabSelected","actualTab","className","map","title","cn","href","onClick","content","App","useState","setSelectedTabId","preparedCurrentTabById","ReactDOM","render","document","getElementById"],"mappings":"uNAAaA,EAAyB,SAACC,EAAMC,GAAP,OACpCD,EAAKE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOH,M,OCEjBI,EAAO,SAAC,GAId,IAHLL,EAGI,EAHJA,KACAM,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAYT,EAAuBC,EAAMM,IAAkBN,EAAK,GAEtE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKS,UAAU,gBAAf,SACE,6BACGT,EAAKU,KAAI,SAACP,GACT,IAAQC,EAAcD,EAAdC,GAAIO,EAAUR,EAAVQ,MAEZ,OACE,oBACEF,UAAWG,IAAG,CACZ,YAAaJ,EAAUJ,KAAOA,IAEhC,UAAQ,MAJV,SAOE,mBACES,KAAI,WAAMV,EAAIC,IACd,UAAQ,UACRU,QAAS,WACHV,IAAOI,EAAUJ,IACnBG,EAAcJ,IALpB,SASGQ,KAXER,EAAIC,WAmBnB,qBAAKK,UAAU,QAAQ,UAAQ,aAA/B,SACGD,EAAUO,cCpCNf,EAAO,CAClB,CAAEI,GAAI,QAASO,MAAO,QAASI,QAAS,eACxC,CAAEX,GAAI,QAASO,MAAO,QAASI,QAAS,eACxC,CAAEX,GAAI,QAASO,MAAO,QAASI,QAAS,gBAG7BC,EAAM,WACjB,MAA0CC,mBAASjB,EAAK,GAAGI,IAA3D,mBAAOE,EAAP,KAAsBY,EAAtB,KAEMC,EAAyBpB,EAAuBC,EAAMM,GAE5D,OACE,sBAAKG,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBU,EAAuBR,SAG7C,cAAC,EAAD,CACEX,KAAMA,EACNM,cAAeA,EACfC,cAAe,YAAa,IAAVH,EAAS,EAATA,GAChBc,EAAiBd,UCzB3BgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.374c6f9b.chunk.js","sourcesContent":["export const findCurrentElementById = (tabs, selectedId) => (\n  tabs.find(tab => tab.id === selectedId)\n);\n","import cn from 'classnames';\nimport { findCurrentElementById } from '../../utils/helpers';\n\nexport const Tabs = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const actualTab = findCurrentElementById(tabs, selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                className={cn({\n                  'is-active': actualTab.id === id,\n                })}\n                data-cy=\"Tab\"\n                key={tab.id}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    if (id !== actualTab.id) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {actualTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { findCurrentElementById } from './utils/helpers';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const preparedCurrentTabById = findCurrentElementById(tabs, selectedTabId);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${preparedCurrentTabById.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={({ id }) => {\n          setSelectedTabId(id);\n        }}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}